apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy
  namespace: project2
spec:
  params:
    - name: deployment-name
      description: name of the deployment to be patched
      type: string
      default: testapp
    - name: git-url
      description: url of the git repo for the code of deployment
      type: string
      default: https://github.com/realglobe-automated/spring-petclinic.git
    - name: git-revision
      description: revision to be used from repo of the code for deployment
      default: main
      type: string
    - name: IMAGE
      description: image to be build from the code
      type: string
      default: image-registry.openshift-image-registry.svc:5000/project2/testimage
    - name: SUBDIR
      description: where to clone the git repo
      default: ''
    - default: ./
      description: image path
      name: LOCAL_SCAN_PATH
      type: string
    - default: CRITICAL
      description: vulnerability severity level
      name: SEVERITY_LEVELS
      type: string
    - name: smtpserver
      type: string
      description: secret name for SMTP server information (url, port, password)
      default: smtp-server-secret

  workspaces:
    - name: app-source
    - name: maven-settings
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)
        - name: deleteExisting
          value: 'true'
        - name: sslVerify
          value: 'false'
        - name: noProxy
          value: 'true'
        - name: verbose
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: app-source
    - name: ls-workspace
      taskRef:
        name: ls-source
        kind: Task
      runAfter:
        - git-clone
      workspaces:
        - name: source
          workspace: app-source

    - name: scan-sourcecode
      params:
        - name: ARGS
          value:
            - '--exit-code'
            - '1'
            - '--severity'
            - $(params.SEVERITY_LEVELS)
            - filesystem
        - name: IMAGE_PATH
          value: $(params.LOCAL_SCAN_PATH)
      runAfter:
        - ls-workspace
      taskRef:
        kind: Task
        name: trivy-scanner
      workspaces:
        - name: manifest-dir
          workspace: app-source

    - name: notify-trivy-source-scan-error
      when:
        - input: $(tasks.scan-sourcecode.results.status)
          operator: in
          values: ["Failed"]
      params:
        - name: smtpserver
          value: $(params.smtpserver)
        - name: emailsubject
          value: "OpenShift Pipeline failed for project $(context.pipelineRun.namespace) at scan-sourcecode"
        - name: emailbody
          value: "Source code scan by trivy failed.\n$(tasks.scan-sourcecode.results.log)"
        - name: emailsender
          value: yuichi.mizutani@systemi.co.jp
        - name: emailrecipients
          value: yuichi.mizutani@systemi.co.jp
        - name: exitcode
          value: 1
      taskRef:
        name: sendmail
      runAfter:
        - scan-sourcecode

#    - name: unit-tests
#      taskRef:
#        name: maven
#        kind: ClusterTask
#      runAfter:
#        - ls-workspace
#      workspaces:
#        - name: source
#          workspace: app-source
#        - name: maven-settings
#          workspace: maven-settings
#      params:
#        - name: GOALS
#          value: 
#            - test

    - name: build-jar
      taskRef:
        name: maven
        kind: ClusterTask
      params:
        - name: GOALS
          value:
            - package
      runAfter:
         - notify-trivy-source-scan-error
#        - scan-sourcecode
#        - unit-tests
      workspaces:
        - name: source
          workspace: app-source
        - name: maven-settings
          workspace: maven-settings

    - name: build-image
      params:
        - name: IMAGE
          value: $(params.IMAGE)
      runAfter:
        - build-jar
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: app-source

    - name: scan-build-image
      params:
        - name: ARGS
          value:
            - '--exit-code'
            - '1'
            - '--severity'
            - $(params.SEVERITY_LEVELS)
            - image
        - name: IMAGE_PATH
          value: $(params.IMAGE)
      runAfter:
        - build-image
      taskRef:
        kind: Task
        name: trivy-scanner
      workspaces:
        - name: manifest-dir
          workspace: app-source

    - name: update-deployment
      params:
        - name: deployment
          value: $(params.deployment-name)
        - name: IMAGE
          value: $(params.IMAGE)
        - name: IMAGEDIGEST
          value: $(tasks.build-image.results.IMAGE_DIGEST)
      runAfter:
        - scan-build-image
      taskRef:
        kind: Task
        name: update-deployment

  finally:
    - name: notify-clone-failure
      when:
        - input: $(tasks.git-clone.status)
          operator: in
          values: ["Failed"]
      params:
        - name: smtpserver
          value: $(params.smtpserver)
        - name: emailsubject
          value: "OpenShift Pipeline failed for project $(context.pipelineRun.namespace) at git-clone"
        - name: emailbody
          value: "Git clone failed. Please check if the URL below is valid.\nURL: $(params.git-url)"
        - name: emailsender
          value: yuichi.mizutani@systemi.co.jp
        - name: emailrecipients
          value: yuichi.mizutani@systemi.co.jp
        - name: exitcode
          value: 0
      taskRef:
        name: sendmail
