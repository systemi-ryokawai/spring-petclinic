apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sendmail
spec:
  description: This task sends a simple email to receivers via SMTP server
  params:
  - name: smtpserver
    type: string
    description: secret name for SMTP server information (url, port, password)
  - name: emailsubject
    type: string
    description: plain text email subject
  - name: emailbody
    type: string
    description: plain text email body
  - name: emailsender
    type: string
    description: sender email address
  - name: emailrecipients
    type: string
    description: recipient email addresses (space delimited list)
  - name: exitcode
    type: string
    description: exit code of this task
  steps:
  - name: send
#    image: docker.io/library/python:3.8-alpine@sha256:e11bbd37d4371894e954421b85dbe8dd4eb7198d7cb4ed144ab529f19f57c3f1 #tag: 3.8-alpine
    image: image-registry.openshift-image-registry.svc:5000/openshift/python
    script: |
      #!/usr/bin/env python3
      import smtplib, ssl, os
      port = os.getenv('PORT')
      smtp_server = os.getenv('SERVER')
      sender_email = "$(params.emailsender)"
      receiver_emails = "$(params.emailrecipients)"
      user = os.getenv('USER')
      password = os.getenv('PASSWORD')
      tls = os.getenv('TLS')
      message = f"""\
      Subject: $(params.emailsubject)
      To: {receiver_emails}
      From: {sender_email}

      $(params.emailbody)"""
      print(message)
      if tls == 'True':
          context = ssl.create_default_context()
          server = smtplib.SMTP_SSL(smtp_server, port, context=context)
      else:
          server = smtplib.SMTP(smtp_server, port)
      if password != '':
          server.login(user, password)
      for receiver in [item for item in receiver_emails.split(' ') if item]:
          server.sendmail(sender_email, receiver, message.encode('utf-8'))
      server.quit()
      exit($(params.exitcode))
    env:
    - name: USER
      valueFrom:
        secretKeyRef:
          name: $(params.smtpserver)
          key: user
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          name: $(params.smtpserver)
          key: password
    - name: TLS
      valueFrom:
        secretKeyRef:
          name: $(params.smtpserver)
          key: tls
    - name: SERVER
      valueFrom:
        secretKeyRef:
          name: $(params.smtpserver)
          key: url
    - name: PORT
      valueFrom:
        secretKeyRef:
          name: $(params.smtpserver)
          key: port
